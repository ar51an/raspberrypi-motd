#!/bin/bash

function color (){
  echo "\e[$1m$2\e[0m"
}

function sec2time (){
  local input=$1

  ((days=input/86400))
  ((input=input%86400))
  ((hours=input/3600))
  ((input=input%3600))
  ((mins=input/60))

  local daysPlural="s"
  local hoursPlural="s"
  local minsPlural="s"

  if [[ $days -eq 0 ||  $days -eq 1 ]]; then
    daysPlural=""
  fi
  if [[ $hours -eq 0 || $hours -eq 1 ]]; then
    hoursPlural=""
  fi
  if [[ $mins -eq 0 || $mins -eq 1 ]]; then
    minsPlural=""
  fi
  echo "$days day$daysPlural $hours hr$hoursPlural $mins min$minsPlural"
}
statsLabelColor="38;5;143"
bulletColor="38;5;241"
infoColor="38;5;74"
dimInfoColor="38;5;7;2"
me=$(logname)

# Last Login
read loginIP loginDate <<< $(last $me --time-format iso -2 | awk 'NR==1 { print $3,$4 }')
if [[ $loginDate == *T* ]]; then
  login="$(date -d $loginDate +"%a %b %d %Y, %I:%M %p") $(color $dimInfoColor "» $loginIP")"
else
  # First Login
  login="None"
fi

# Stats
label1="$login"
label1="$(color $statsLabelColor "Last") $(color $bulletColor "····")$(color $statsLabelColor "›") $(color $infoColor "$label1")"

label2="$(vcgencmd measure_temp | cut -c "6-9")°C"
label2="$(color $statsLabelColor "Temp") $(color $bulletColor "···")$(color $statsLabelColor "›") $(color $infoColor $label2)"

uptime="$(sec2time $(cut -d "." -f 1 /proc/uptime))"
uptime="$uptime $(color $dimInfoColor "» $(date -d "@"$(grep btime /proc/stat | cut -d " " -f 2) +"%m-%d-%y %H:%M")")"

label3="$uptime"
label3="$(color $statsLabelColor "Uptime") $(color $bulletColor "··")$(color $statsLabelColor "›") $(color $infoColor "$label3")"

label4="$(awk -v a="$(awk '/cpu /{print $2+$3+$4+$5+$6+$7+$8+$9+$10,$5}' /proc/stat; sleep 0.3)" '/cpu /{split(a,b," "); printf "%.1f%%", 100*(($2+$3+$4+$5+$6+$7+$8+$9+$10-b[1])-($5-b[2]))/($2+$3+$4+$5+$6+$7+$8+$9+$10-b[1])}' /proc/stat)"
label4="$(color $statsLabelColor "Cpu") $(color $bulletColor "····")$(color $statsLabelColor "›") $(color $infoColor $label4)"

label5="$(df -h ~ | awk 'NR==2 { printf "%sB / %sB \\e[38;5;144m» Free: %sB\\e[0m",$3,$2,$4; }')"
label5="$(color $statsLabelColor "Disk") $(color $bulletColor "····")$(color $statsLabelColor "›") $(color $infoColor "$label5")"

label6="$(/bin/ls -d /proc/[0-9]* | wc -l)"
label6="$(color $statsLabelColor "Procs") $(color $bulletColor "··")$(color $statsLabelColor "›") $(color $infoColor $label6)"

label7="$(free -h --si | awk 'NR==2 { printf "%sB / %sB \\e[38;5;144m» Free: %sB\\e[0m",$3,$2,$4; }')"
label7="$(color $statsLabelColor "Memory") $(color $bulletColor "··")$(color $statsLabelColor "›") $(color $infoColor "$label7")"

label8="$(hostname -I)"
label8="$(color $statsLabelColor "IP") $(color $bulletColor "·····")$(color $statsLabelColor "›") $(color $infoColor $label8)"

## Redis Stats
# Get the total number of DNS queries
dbsize=$(redis-cli info keyspace | grep 'db0:keys=' | cut -d= -f2 | cut -d, -f1)
# Calculate the cache hit rate
stats=$(redis-cli info stats)
hits=$(echo "$stats" | awk -F: '/^keyspace_hits:/{print $2}' | tr -d '\r')
misses=$(echo "$stats" | awk -F: '/^keyspace_misses:/{print $2}' | tr -d '\r')
total=$((hits + misses))
hit_rate=$(echo "scale=2; $hits / $total * 100" | bc)
label9="$(color $infoColor "dbsize")$(color $statsLabelColor "=")$(color $dimInfoColor "$dbsize")$(color $infoColor " queries")$(color $statsLabelColor "=")$(color $dimInfoColor "$total")$(color $infoColor " hits")$(color $statsLabelColor "=")$(color $dimInfoColor "$hits")$(color $infoColor " misses")$(color $statsLabelColor "=")$(color $dimInfoColor "$misses")$(color $infoColor " hitrate")$(color $statsLabelColor "=")$(color $dimInfoColor "$hit_rate%")"
label9="$(color $statsLabelColor "Redis") $(color $bulletColor "···")$(color $statsLabelColor "›") $label9"

# Print
echo
# Two Entries Per Line
echo -e "                                                         $label2\r   $label1"
echo -e "                                                         $label4\r   $label3"
echo -e "                                                         $label6\r   $label5"
echo -e "                                                         $label8\r   $label7"
echo -e "                                                                \r   $label9"
